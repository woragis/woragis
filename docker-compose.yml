version: "3.8"

services:
  # # Portfolio Application
  # portfolio:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${PORT:-3000}:3000"
  #   environment:
  #     - NODE_ENV=${NODE_ENV:-development}
  #     - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@db:5432/portfolio}
  #     - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
  #     - REDIS_URL=${REDIS_URL:-redis://redis:6379}
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_started
  #   restart: unless-stopped
  #   networks:
  #     - portfolio-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-portfolio}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-portfolio}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - portfolio-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - portfolio-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  portfolio-network:
    driver: bridge
