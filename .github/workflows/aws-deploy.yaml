name: AWS Deploy

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      project-name:
        required: true
        type: string
      root-domain:
        required: true
        type: string
      subdomain:
        required: true
        type: string
      environment:
        required: true
        type: string
      s3-bucket-name:
        required: true
        type: string
      logging-bucket-name:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  terraform-route53-domain:
    name: Create or Get Domain
    runs-on: ubuntu-latest
    steps:
      - name: Set up Route 53 DNS
        uses: woragis/terraform-route53-domain@v1
        with:
          project-name: ${{ inputs.project-name }}
          root-domain: ${{ inputs.root-domain }}
          aws-region: ${{ inputs.aws-region }}
          environment: ${{ inputs.environment }}
          terraform-dir: ./terraform/route53-domain
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Extract Terraform outputs
        working-directory: ./terraform/route53-domain
        id: get_outputs
        shell: bash
        run: |
          echo "zone_id=$(terraform output -raw zone_id)" >> $GITHUB_OUTPUT

    outputs:
      zone_id: ${{ steps.get_outputs.outputs.zone_id }}

  terraform-s3:
    name: Create S3 Buckets
    runs-on: ubuntu-latest
    needs:
      - terraform-route53-domain
    steps:
      - name: Deploy React App Infrastructure
        uses: woragis/terraform-s3@v1
        with:
          project-name: ${{ inputs.project-name }}
          terraform-dir: ./terraform/s3
          aws-region: ${{ inputs.aws-region }}
          s3-bucket-name: ${{ inputs.s3-bucket-name }}
          logging-bucket-name: ${{ inputs.logging-bucket-name }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Extract Terraform outputs
        working-directory: ./terraform/s3
        id: get_outputs
        run: |
          echo "s3_bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT
          echo "website_endpoint=$(terraform output -raw website_endpoint)" >> $GITHUB_OUTPUT

    outputs:
      s3_bucket_name: ${{ steps.get_outputs.outputs.s3_bucket_name }}
      website_endpoint: ${{ steps.get_outputs.outputs.website_endpoint }}

  terraform-cdn:
    name: Connect CloudFront to S3 Buckets and Routes
    runs-on: ubuntu-latest
    needs:
      - terraform-s3
    steps:
      - name: Update CDN (CloudFront)
        uses: woragis/terraform-cdn@v1
        with:
          project-name: ${{ inputs.project-name }}
          terraform-dir: ./terraform/cdn
          root-domain: ${{ inputs.root-domain }}
          origin-domain-name: ${{ needs.terraform-s3.outputs.website_endpoint }}
          logging-bucket-domain-name: ${{ inputs.logging-bucket-name }}
          environment: ${{ inputs.environment }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Extract Terraform outputs
        working-directory: ./terraform/cdn
        id: get_outputs
        shell: bash
        run: |
          echo "cloudfront_domain_name=$(terraform output -raw cloudfront_domain_name)" >> $GITHUB_OUTPUT
          echo "cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
          echo "full_domain=$(terraform output -raw full_domain)" >> $GITHUB_OUTPUT

    outputs:
      cloudfront_domain_name: ${{ steps.get_outputs.outputs.cloudfront_domain_name }}
      cloudfront_distribution_id: ${{ steps.get_outputs.outputs.cloudfront_distribution_id }}
      full_domain: ${{ steps.get_outputs.outputs.full_domain }}
      zone_id: ${{ steps.get_outputs.outputs.zone_id }}

  terraform-route53-subdomain:
    name: Create Routes and Certificates
    runs-on: ubuntu-latest
    needs: terraform-cdn
    steps:
      - name: Set up Route 53 DNS
        uses: woragis/terraform-route53-subdomain@v1
        with:
          project-name: ${{ inputs.project-name }}
          root-domain: ${{ inputs.root-domain }}
          subdomain: ${{ inputs.subdomain }}
          target-domain: ${{ needs.terraform-cdn.outputs.cloudfront_domain_name }}
          target-record-type: CNAME
          terraform-dir: ./terraform/route53-subdomain
          aws-region: ${{ inputs.aws-region }}
          environment: ${{ inputs.environment }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  s3-deploy:
    name: Deploy React App to S3 Bucket
    runs-on: ubuntu-latest
    needs:
      - terraform-s3
      - terraform-cdn
      - terraform-route53-subdomain
    steps:
      - name: Debug output
        run: |
          echo "S3 Bucket: ${{ needs.terraform-s3.outputs.s3_bucket_name }}"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ needs.terraform-s3.outputs.s3_bucket_name }} --delete
