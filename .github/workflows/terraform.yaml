name: Deploy React App

on:
  push:
    branches:
      - dev
      - main
      - staging

jobs:
  terraform-import:
    name: Import S3 Buckets If They Exist
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/s3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.0'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Import Existing Buckets
        env:
          TF_LOG: DEBUG
          TF_VAR_project_name: my-app
        run: |
          terraform import "module.s3.aws_s3_bucket.static_site" "my-app-prod-s3" || true
          terraform import "module.s3.aws_s3_bucket.logging_bucket" "my-app-prod-logs" || true

  terraform-s3:
    name: Creates S3 Buckets
    runs-on: ubuntu-latest
    needs: terraform-import
    steps:
      - name: Deploy React App Infrastructure
        uses: woragis/terraform-s3@v1
        with:
          project-name: my-app
          terraform-dir: ./terraform/s3
          aws-region: us-east-1
          s3-bucket-name: woragis-bucket-name
          logging-bucket-name: woragis-logging-bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform-route53:
    name: Creates Routes and Certificates
    runs-on: ubuntu-latest
    needs: terraform-s3
    steps:
      - name: Set up Route 53 DNS
        uses: woragis/terraform-route53@v1
        with:
          project-name: myapp
          root-domain: example.com
          subdomain: app
          target-domain: ${{ needs.terraform-s3.outputs.website_endpoint }}
          target-record-type: CNAME
          terraform-dir: ./terraform/route53
          aws-region: us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform-cdn:
    name: Connects CloudFront to S3 Buckets and Routes
    runs-on: ubuntu-latest
    needs: terraform-s3
    steps:
      - name: Update CDN (CloudFront)
        uses: woragis/terraform-cdn@v1
        with:
          project-name: myapp
          terraform-dir: ./terraform/cdn
          root-domain: example.com
          origin-domain-name: ${{ needs.terraform-s3.outputs.website_endpoint }}
          logging-bucket-domain-name: ${{ needs.terraform-s3.outputs.logging_bucket_name }}
          environment: prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  s3-deploy:
    name: Deploy React app to S3 Bucket
    runs-on: ubuntu-latest
    needs: terraform-s3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # or your desired Node version

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://${{ needs.terraform-s3.outputs.s3_bucket_name }} --delete
