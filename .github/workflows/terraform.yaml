name: Deploy React App

on:
  push:
    branches:
      - dev
      - main
      - staging

jobs:
  terraform-s3:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy React App Infrastructure
        uses: woragis/terraform-s3@v1
        with:
          project-name: my-app
          terraform-dir: ./terraform/s3
          aws-region: us-east-1
          s3-bucket-name: woragis-bucket-name
          logging-bucket-name: woragis-logging-bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform-route53:
    runs-on: ubuntu-latest
    needs: terraform-s3
    steps:
      - name: Set up Route 53 DNS
        uses: woragis/terraform-route53@v1
        with:
          project-name: myapp
          root-domain: example.com
          subdomain: app
          target-domain: ${{ needs.terraform-react.outputs.website_endpoint }}
          target-record-type: CNAME
          terraform-dir: ./terraform/route53
          aws-region: us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform-cdn:
    runs-on: ubuntu-latest
    needs: terraform-s3
    steps:
      - name: Update CDN (CloudFront)
        uses: woragis/terraform-cdn@v1
        with:
          project-name: myapp
          terraform-dir: ./terraform/cdn
          root-domain: example.com
          origin-domain-name: ${{ needs.terraform-react.outputs.website_endpoint }}
          logging-bucket-domain-name: ${{ needs.terraform-react.outputs.logging_bucket_name }}
          environment: prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
